open separate command prompt
cd C:\Program Files\MongoDB\Server\3.4\bin

c>mongoimport --db population --collection zipcodes --file C:\164457_Vidhya\data\db\zips.json

open mongo.exe(client)
show dbs
use population
show collections
db.zipcodes.find()
1)db.zipcodes.find({$and:[{city:"ATLANTA"},{state:"GA"}]})
(OR)	 db.zipcodes.find({city:"ATLANTA",state:"GA"})

db.zipcodes.find({$and:[{city:"ATLANTA"},{state:"GA"}]})

2)use db.zipcodes.aggregate with $match to do the same as above.
db.zipcodes.aggregate({$match:{city:"ATLANTA",state:"GA"}})

3)use $group to count the number of zip codes in Atlanta.

db.zipcodes.aggregate([
{$match:{city:"ATLANTA"}},
{$group:{_id:Atlanta,myCount:{$sum:1}}}
]
)


{$group:{count:{$sum:"$_id"}}}

db.orders.aggregate([
                     { $match: { status: "A" } },
                     { $group: { _id: "$cust_id", total: { $sum: "$amount" } } },
                     { $sort: { total: -1 } }
                   ])






db.zipcodes.aggregate( [
   { $group: { _id: null, myCount: { $sum: 1 } } },
   { $project: { _id: 0 } }
] )


3)db.zipcodes.aggregate([ {$match:{city:"ATLANTA"}}, {$group:{_id:"$city",myCount:{$sum:1}}} ] )//crt o/p

4)use $group to find the total population in Atlanta.
db.zipcodes.aggregate(
[
{$match:{city:"ATLANTA"}},
{$group:{_id:"$city",totalPop:{$sum:"$pop"}}}
]
)
Populations By State
5)use aggregate to calculate the total population for each state
db.zipcodes.aggregate(
{$group:{_id:"$state",totalPop:{$sum:"$pop"}}}
)

6)sort the results by population, highest first
db.zipcodes.aggregate([
{$group:{_id:"$state",totalPop:{$sum:"$pop"}}},
{$sort:{totalPop:-1}},
]
)

7)limit the results to just the first 3 results. What are the top 3 states in population?
db.zipcodes.aggregate([
{$group:{_id:"$state",totalPop:{$sum:"$pop"}}},
{$sort:{totalPop:-1}},
{$limit:3}
]
)

Populations by City:
1)use aggregate to calculate the total population for each city (you have to use city/state combination). 
You can use a combination for the _id of the $group: { city: '$city', state: '$state' }
db.zipcodes.aggregate(
{$group:{_id:"$city",totalPop:{$sum:"$pop"}}}
)
OR
db.zipcodes.aggregate(
{$group:{_id:{ city: '$city', state: '$state' },totalPop:{$sum:"$pop"}}}
)

2)sort the results by population, highest first
db.zipcodes.aggregate([
{$group:{_id:{ city: '$city', state: '$state' },totalPop:{$sum:"$pop"}}},
{$sort:{totalPop:-1}}
]
)

3)limit the results to just the first 3 results. What are the top 3 cities in population?
db.zipcodes.aggregate([
{$group:{_id:{ city: '$city', state: '$state' },totalPop:{$sum:"$pop"}}},
{$sort:{totalPop:-1}},
{$limit:3}
])

4)What are the top 3 cities in population in Texas?
db.zipcodes.aggregate([
{$match:{state:"TX"}},
{$group:{_id:"$city",totPop:{$sum:"$pop"}}},
{$sort:{totPop:-1}},
{$limit:3}
])

BONUS:
1)Write a query to get the average city population for each state

db.zipcodes.aggregate(
{$group:{_id:"$state",avgCityPop:{$avg:"$pop"}}}
)

2)What are the top 3 states in terms of average city population?
db.zipcodes.aggregate([
{$group:{_id:"$state",avgCityPop:{$avg:"$pop"}}},
{$limit:3}
])